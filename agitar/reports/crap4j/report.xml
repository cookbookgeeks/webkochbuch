<crap_result>
  <project>
    D:\Projekte\webkochbuch
  </project>
  <project_id>
    1399062747883
  </project_id>
  <timestamp>
    07.05.14 09:25
  </timestamp>
  <classDirectories>
    <classDirectory>
      D:\Projekte\webkochbuch\target\classes
    </classDirectory>
    <classDirectory>
      D:\Projekte\webkochbuch\target\test-classes
    </classDirectory>
  </classDirectories>
  <testClassDirectories>
    <testClassDirectory>
      D:\Projekte\webkochbuch\target\classes
    </testClassDirectory>
    <testClassDirectory>
      D:\Projekte\webkochbuch\target\test-classes
    </testClassDirectory>
  </testClassDirectories>
  <sourceDirectories>
    <sourceDirectory>
      D:\Projekte\webkochbuch\src\main\java
    </sourceDirectory>
    <sourceDirectory>
      D:\Projekte\webkochbuch\src\main\resources
    </sourceDirectory>
    <sourceDirectory>
      D:\Projekte\webkochbuch\src\test\java
    </sourceDirectory>
    <sourceDirectory>
      D:\Projekte\webkochbuch\src\test\resources
    </sourceDirectory>
  </sourceDirectories>
  <libClasspaths>
    <libClasspath>
      D:\webkochbuch\target\classes
    </libClasspath>
    <libClasspath>
      D:\webkochbuch\target\classes
    </libClasspath>
    <libClasspath>
      D:\webkochbuch\target\test-classes
    </libClasspath>
    <libClasspath>
      D:\webkochbuch\target\test-classes
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-context\3.2.4.RELEASE\spring-context-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-beans\3.2.4.RELEASE\spring-beans-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-core\3.2.4.RELEASE\spring-core-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-expression\3.2.4.RELEASE\spring-expression-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-webmvc\3.2.4.RELEASE\spring-webmvc-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-web\3.2.4.RELEASE\spring-web-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\aspectj\aspectjrt\1.7.3\aspectjrt-1.7.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.5\jcl-over-slf4j-1.7.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\log4j\log4j\1.2.15\log4j-1.2.15.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\junit\junit\4.11\junit-4.11.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-java\1.1.5\cucumber-java-1.1.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-core\1.1.5\cucumber-core-1.1.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-html\0.2.3\cucumber-html-0.2.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-jvm-deps\1.0.3\cucumber-jvm-deps-1.0.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\gherkin\2.12.1\gherkin-2.12.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-spring\1.1.5\cucumber-spring-1.1.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\info\cukes\cucumber-junit\1.1.5\cucumber-junit-1.1.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-test\3.2.3.RELEASE\spring-test-3.2.3.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-java\2.38.0\selenium-java-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-android-driver\2.38.0\selenium-android-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\2.38.0\selenium-remote-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\cglib\cglib-nodep\2.1_3\cglib-nodep-2.1_3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\json\json\20080701\json-20080701.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\com\google\guava\guava\15.0\guava-15.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\2.38.0\selenium-chrome-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-htmlunit-driver\2.38.0\selenium-htmlunit-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\sourceforge\htmlunit\htmlunit\2.13\htmlunit-2.13.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\xalan\xalan\2.7.1\xalan-2.7.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\xalan\serializer\2.7.1\serializer-2.7.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-codec\commons-codec\1.8\commons-codec-1.8.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\sourceforge\htmlunit\htmlunit-core-js\2.13\htmlunit-core-js-2.13.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\xerces\xercesImpl\2.11.0\xercesImpl-2.11.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\sourceforge\nekohtml\nekohtml\1.9.19\nekohtml-1.9.19.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\sourceforge\cssparser\cssparser\0.9.11\cssparser-0.9.11.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\w3c\css\sac\1.3\sac-1.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\eclipse\jetty\jetty-websocket\8.1.12.v20130726\jetty-websocket-8.1.12.v20130726.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\eclipse\jetty\jetty-util\8.1.12.v20130726\jetty-util-8.1.12.v20130726.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\eclipse\jetty\jetty-io\8.1.12.v20130726\jetty-io-8.1.12.v20130726.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\eclipse\jetty\jetty-http\8.1.12.v20130726\jetty-http-8.1.12.v20130726.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\apache\httpcomponents\httpcore\4.3\httpcore-4.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\2.38.0\selenium-firefox-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\apache\commons\commons-exec\1.1\commons-exec-1.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\2.38.0\selenium-ie-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\java\dev\jna\jna\3.4.0\jna-3.4.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\net\java\dev\jna\platform\3.4.0\platform-3.4.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-iphone-driver\2.38.0\selenium-iphone-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\2.38.0\selenium-safari-driver-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-support\2.38.0\selenium-support-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\seleniumhq\selenium\selenium-api\2.38.0\selenium-api-2.38.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\webbitserver\webbit\0.4.14\webbit-0.4.14.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\io\netty\netty\3.5.2.Final\netty-3.5.2.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.2.1\jackson-core-2.2.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.2.1\jackson-databind-2.2.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.2.1\jackson-annotations-2.2.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\postgresql\postgresql\9.3-1100-jdbc41\postgresql-9.3-1100-jdbc41.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hibernate\hibernate-core\4.2.7.Final\hibernate-core-4.2.7.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.2.Final\hibernate-commons-annotations-4.0.2.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\hibernate\hibernate-entitymanager\4.2.7.Final\hibernate-entitymanager-4.2.7.Final.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-context-support\3.2.4.RELEASE\spring-context-support-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-aop\3.2.4.RELEASE\spring-aop-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\com\h2database\h2\1.3.156\h2-1.3.156.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-orm\3.2.4.RELEASE\spring-orm-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-jdbc\3.2.4.RELEASE\spring-jdbc-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\spring-tx\3.2.4.RELEASE\spring-tx-3.2.4.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\data\spring-data-jpa\1.4.1.RELEASE\spring-data-jpa-1.4.1.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\org\springframework\data\spring-data-commons\1.6.1.RELEASE\spring-data-commons-1.6.1.RELEASE.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-fileupload\commons-fileupload\1.2\commons-fileupload-1.2.jar
    </libClasspath>
    <libClasspath>
      C:\Users\roneck-p\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar
    </libClasspath>
    <libClasspath>
      D:\Programme\springsource\sts-3.4.0.RELEASE\plugins\com.agitar.eclipse.api_2.1.2.000677\lib\ext\org.agitar.mock.jar
    </libClasspath>
    <libClasspath>
      D:\Programme\springsource\sts-3.4.0.RELEASE\plugins\com.agitar.eclipse.api_2.1.2.000677\com.agitar.mockingbird.jar
    </libClasspath>
  </libClasspaths>
  <stats>
    <name>
      Method Crap Stats
    </name>
    <totalCrap>
      278,00
    </totalCrap>
    <crap>
      3,05
    </crap>
    <median>
      2,00
    </median>
    <average>
      3,05
    </average>
    <stdDev>
      3,44
    </stdDev>
    <methodCount>
      91
    </methodCount>
    <crapMethodCount>
      1
    </crapMethodCount>
    <crapMethodPercent>
      1,10
    </crapMethodPercent>
    <crapLoad>
      5
    </crapLoad>
    <crapThreshold>
      30
    </crapThreshold>
    <globalAverage>
      -1,00
    </globalAverage>
    <globalCraploadAverage>
      -1,00
    </globalCraploadAverage>
    <globalCrapMethodAverage>
      -1,00
    </globalCrapMethodAverage>
    <globalTotalMethodAverage>
      -1,00
    </globalTotalMethodAverage>
    <globalAverageDiff>
      4,05
    </globalAverageDiff>
    <globalCraploadAverageDiff>
      6,00
    </globalCraploadAverageDiff>
    <globalCrapMethodAverageDiff>
      2,00
    </globalCrapMethodAverageDiff>
    <globalTotalMethodAverageDiff>
      92,00
    </globalTotalMethodAverageDiff>
    <shareStatsUrl>
      http://www.crap4j.org/benchmark/stats/new?stat[project_hash]=1399062747883&amp;stat[project_url]=webkochbuch&amp;stat[crap]=1.10&amp;stat[crap_load]=5&amp;stat[crap_methods]=1&amp;stat[total_methods]=91&amp;stat[ones]=0&amp;stat[twos]=76&amp;stat[fours]=12&amp;stat[eights]=2&amp;stat[sixteens]=1&amp;stat[thirtytwos]=0&amp;stat[sixtyfours]=0&amp;stat[one28s]=0&amp;stat[two56s]=0
    </shareStatsUrl>
    <histogram>
      <hist>
        <place>
          one
        </place>
        <value>
          0
        </value>
        <height>
          0,00px
        </height>
      </hist>
      <hist>
        <place>
          two
        </place>
        <value>
          76
        </value>
        <height>
          170,00px
        </height>
      </hist>
      <hist>
        <place>
          four
        </place>
        <value>
          12
        </value>
        <height>
          28,00px
        </height>
      </hist>
      <hist>
        <place>
          eight
        </place>
        <value>
          2
        </value>
        <height>
          28,00px
        </height>
      </hist>
      <hist>
        <place>
          sixteen
        </place>
        <value>
          1
        </value>
        <height>
          28,00px
        </height>
      </hist>
      <hist>
        <place>
          thirtytwo
        </place>
        <value>
          0
        </value>
        <height>
          0,00px
        </height>
      </hist>
      <hist>
        <place>
          sixtyfour
        </place>
        <value>
          0
        </value>
        <height>
          0,00px
        </height>
      </hist>
      <hist>
        <place>
          one28
        </place>
        <value>
          0
        </value>
        <height>
          0,00px
        </height>
      </hist>
      <hist>
        <place>
          two56
        </place>
        <value>
          0
        </value>
        <height>
          0,00px
        </height>
      </hist>
    </histogram>
  </stats>
  <methods>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver$BrowserCleanup
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver$BrowserCleanup
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/BrowserDriver$BrowserCleanup;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(org.cookbookgeeks.webkochbuch.BrowserDriver$BrowserCleanup)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver$BrowserCleanup
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        clickLink
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void clickLink(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        clickLinkByID
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void clickLinkByID(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        clickPage
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void clickPage(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        close
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void close()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        fillTextfield
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void fillTextfield(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        getPageLoaded
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String getPageLoaded()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        loadPage
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void loadPage(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        submitFormular
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void submitFormular()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        CreateRecipeStepDefinitions
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        I_am_on_the_Page_of_a_recipe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_am_on_the_Page_of_a_recipe()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        I_press_the_edit_recipe_button
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_press_the_edit_recipe_button()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        I_press_the_save_button
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_press_the_save_button()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        ReadRecipeStepDefinition
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        ReadRecipeStepDefinition
      </className>
      <methodName>
        I_have_a_hyperlink_to_an_existing_recipe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_have_a_hyperlink_to_an_existing_recipe()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        ReadRecipeStepDefinition
      </className>
      <methodName>
        I_open_a_hyperlink_to_a_recipe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_open_a_hyperlink_to_a_recipe()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        RunTests
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.cookbookgeeks.webkochbuch.domain.Recipe, java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        getDescription
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getDescription()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        getId
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getId()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        getPath
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getPath()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        getRecipe
      </methodName>
      <methodSignature>
        ()Lorg/cookbookgeeks/webkochbuch/domain/Recipe;
      </methodSignature>
      <fullMethod>
        public  org.cookbookgeeks.webkochbuch.domain.Recipe getRecipe()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        getResourcesPath
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getResourcesPath()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        setDescription
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setDescription(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        setId
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void setId(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        setPath
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setPath(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        setRecipe
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;)V
      </methodSignature>
      <fullMethod>
        public  void setRecipe(org.cookbookgeeks.webkochbuch.domain.Recipe)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Image
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getContent
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getContent()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getCreation
      </methodName>
      <methodSignature>
        ()Ljava/util/Date;
      </methodSignature>
      <fullMethod>
        public  java.util.Date getCreation()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getDescription
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getDescription()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getId
      </methodName>
      <methodSignature>
        ()Ljava/lang/Integer;
      </methodSignature>
      <fullMethod>
        public  java.lang.Integer getId()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getImages
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lorg/cookbookgeeks/webkochbuch/domain/Image;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;org.cookbookgeeks.webkochbuch.domain.Image&gt; getImages()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getPreparationEndurance
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getPreparationEndurance()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getTitle
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getTitle()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        getTotalEndurance
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getTotalEndurance()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setContent
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setContent(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setCreation
      </methodName>
      <methodSignature>
        (Ljava/util/Date;)V
      </methodSignature>
      <fullMethod>
        public  void setCreation(java.util.Date)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setDescription
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setDescription(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setId
      </methodName>
      <methodSignature>
        (Ljava/lang/Integer;)V
      </methodSignature>
      <fullMethod>
        public  void setId(java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setPreparationEndurance
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void setPreparationEndurance(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setTitle
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setTitle(java.lang.String)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        setTotalEndurance
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void setTotalEndurance(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.domain
      </package>
      <className>
        Recipe
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;)V
      </methodSignature>
      <fullMethod>
        public  void add(org.cookbookgeeks.webkochbuch.domain.Recipe)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        addImage
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Image;Ljava/lang/Integer;)V
      </methodSignature>
      <fullMethod>
        public  void addImage(org.cookbookgeeks.webkochbuch.domain.Image, java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        delete
      </methodName>
      <methodSignature>
        (Ljava/lang/Integer;)V
      </methodSignature>
      <fullMethod>
        public  void delete(java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        deleteImage
      </methodName>
      <methodSignature>
        (Ljava/lang/Integer;)V
      </methodSignature>
      <fullMethod>
        public  void deleteImage(java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        edit
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;)V
      </methodSignature>
      <fullMethod>
        public  void edit(org.cookbookgeeks.webkochbuch.domain.Recipe)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        getAll
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lorg/cookbookgeeks/webkochbuch/domain/Recipe;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;org.cookbookgeeks.webkochbuch.domain.Recipe&gt; getAll()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        getImage
      </methodName>
      <methodSignature>
        (Ljava/lang/Integer;)Lorg/cookbookgeeks/webkochbuch/domain/Image;
      </methodSignature>
      <fullMethod>
        public  org.cookbookgeeks.webkochbuch.domain.Image getImage(java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        getItemsRange
      </methodName>
      <methodSignature>
        (II)Ljava/util/List&lt;Lorg/cookbookgeeks/webkochbuch/domain/Recipe;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;org.cookbookgeeks.webkochbuch.domain.Recipe&gt; getItemsRange(int, int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        getRecipe
      </methodName>
      <methodSignature>
        (Ljava/lang/Integer;)Lorg/cookbookgeeks/webkochbuch/domain/Recipe;
      </methodSignature>
      <fullMethod>
        public  org.cookbookgeeks.webkochbuch.domain.Recipe getRecipe(java.lang.Integer)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        getTopItems
      </methodName>
      <methodSignature>
        (I)Ljava/util/List&lt;Lorg/cookbookgeeks/webkochbuch/domain/Recipe;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;org.cookbookgeeks.webkochbuch.domain.Recipe&gt; getTopItems(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.service
      </package>
      <className>
        RecipeService
      </className>
      <methodName>
        saveImage
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Image;)Ljava/lang/Integer;
      </methodSignature>
      <fullMethod>
        public  java.lang.Integer saveImage(org.cookbookgeeks.webkochbuch.domain.Image)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        FileUploadController
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        HomeController
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        HomeController
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        HomeController
      </className>
      <methodName>
        categoryView
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String categoryView()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        HomeController
      </className>
      <methodName>
        contactForm
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String contactForm()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        HomeController
      </className>
      <methodName>
        home
      </methodName>
      <methodSignature>
        (Ljava/util/Locale;Lorg/springframework/ui/Model;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String home(java.util.Locale, org.springframework.ui.Model)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        addForm
      </methodName>
      <methodSignature>
        (Lorg/springframework/ui/Model;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String addForm(org.springframework.ui.Model)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        deleteImage
      </methodName>
      <methodSignature>
        (I)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String deleteImage(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        deleteRecipe
      </methodName>
      <methodSignature>
        (I)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String deleteRecipe(int)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        listRecipes
      </methodName>
      <methodSignature>
        (Lorg/springframework/ui/Model;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String listRecipes(org.springframework.ui.Model)
      </fullMethod>
      <crap>
        2,00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        checkForError
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public static  boolean checkForError()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        BrowserDriver
      </className>
      <methodName>
        getCurrentDriver
      </methodName>
      <methodSignature>
        ()Lorg/openqa/selenium/WebDriver;
      </methodSignature>
      <fullMethod>
        public static synchronized  org.openqa.selenium.WebDriver getCurrentDriver()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        CreateRecipeStepDefinitions
      </className>
      <methodName>
        I_click_in_the_menu_bar
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void I_click_in_the_menu_bar(java.lang.String)
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        CreateRecipeStepDefinitions
      </className>
      <methodName>
        save_the_recipe_after_the_formular_is_filled_in
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void save_the_recipe_after_the_formular_is_filled_in()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        CreateRecipeStepDefinitions
      </className>
      <methodName>
        the_application_should_show_an_input_formular
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void the_application_should_show_an_input_formular()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        I_am_on_the_edit_recipe_formular
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_am_on_the_edit_recipe_formular()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        I_should_be_forwarded_to_a_formular_site_in_which_I_can_edit_my_recipe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void I_should_be_forwarded_to_a_formular_site_in_which_I_can_edit_my_recipe()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        EditRecipeStepDefinitions
      </className>
      <methodName>
        the_changes_should_be_saved_and_the_recipe_should_be_shown
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void the_changes_should_be_saved_and_the_recipe_should_be_shown()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch
      </package>
      <className>
        ReadRecipeStepDefinition
      </className>
      <methodName>
        the_Website_with_the_requested_recipe_appears
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void the_Website_with_the_requested_recipe_appears()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        FileUploadController
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        editForm
      </methodName>
      <methodSignature>
        (ILorg/springframework/ui/Model;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String editForm(int, org.springframework.ui.Model)
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        showRecipe
      </methodName>
      <methodSignature>
        (ILorg/springframework/ui/Model;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String showRecipe(int, org.springframework.ui.Model)
      </fullMethod>
      <crap>
        6,00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        addRecipe
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;Ljava/util/List&lt;Ljava/lang/Integer;&gt;;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String addRecipe(org.cookbookgeeks.webkochbuch.domain.Recipe, java.util.List&lt;java.lang.Integer&gt;)
      </fullMethod>
      <crap>
        12,00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        RecipeController
      </className>
      <methodName>
        editRecipe
      </methodName>
      <methodSignature>
        (Lorg/cookbookgeeks/webkochbuch/domain/Recipe;Ljava/util/List&lt;Ljava/lang/Integer;&gt;;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String editRecipe(org.cookbookgeeks.webkochbuch.domain.Recipe, java.util.List&lt;java.lang.Integer&gt;)
      </fullMethod>
      <crap>
        12,00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        org.cookbookgeeks.webkochbuch.web
      </package>
      <className>
        FileUploadController
      </className>
      <methodName>
        uploadFileHandler
      </methodName>
      <methodSignature>
        (Lorg/springframework/web/multipart/MultipartFile;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String uploadFileHandler(org.springframework.web.multipart.MultipartFile, java.lang.String)
      </fullMethod>
      <crap>
        30,00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0,00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
  </methods>
</crap_result>
