Webkochbuch TODO:

  - Bilder, Ratings, Kommentare als Entitäten hinzufügen, Beziehungen zu Rezepten erstellen, Ins UI einbauen.
      - Tabellen existieren mehr oder weniger schon.
      - Klassen können von der Rezeptklasse abgeschaut werden, sehr einfach.
      - 1:N Beziehung muss korrekt mit Hibernate gemapped werden -> Lesen/Experimentierenn (@ManyToOne und @OneToMany Annotations).
      - UI: Mehr oder weniger einfach. Evtl. grafische Detailarbeit, aber machbar.
      
      SCHWIERIGKEIT: 1:N / N:1 Beziehung richtig im Hibernate Mapping konfigurieren (keine Erfahrung hier).

  - Benutzerverwaltung: accounts Tabelle, accounts Klasse, Sessionunterstützung, Login-/Logoutfunktionen, ins UI integrieren.
      - Habe ich neulich mit PHP gemacht, weiß daher jetzt wie es technisch geht.
      - Tabelle und gemappte Klasse einfach (bei Rezept abschauen).
      - Sessionsunterstützung für alle Seiten mit Spring Security (habe mal kurz reingelesen, scheint machbar zu sein).
      - UI-Anpassungen minimal.
      
      SCHWIERIGKEIT: Sessions mit Spring Security korrekt einbauen.
      
  - Suche: Suchmethoden in Serviceklasse des Rezepts einbauen (SQL statements für hibernate query), UI-Seite bauen, evtl ajax benutzen wenn es sinn macht?
    - Suchmethoden: Recht einfach, überlegen welche select Abfragen für welche Suchen gebraucht werden und die Methoden schreiben.
    - UI: Idee: Irgendwo auf Seite kleines Suchfeld mit ajax zur Schnellsuche und eigene Suchseite für detailliertere Suchen.
    - Pagination (serverseitig)

      SCHWIERIGKEIT: Keine.
    
  - Neues Datenbankschema? Darauf aktualisieren und anpassen.
      - Flo hat eins gemacht iirc. Noch mal reinschauen. Anpassungsaufwand des Codes dürfte minimal sein.

      SCHWIERIGKEIT: Keine (außer eventuelle 1:N Beziehungen, siehe Punkt 1).
      
  - Auf Heroku zum Laufen bringen.
      - apshfwierhfoiawheifheoihr :/
      - Beten
      
      SCHWIERIGKEIT: jo ...
