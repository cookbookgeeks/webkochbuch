<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/data/jpa 
    http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Read the property values from application.properties -->
	<context:property-placeholder location="classpath:application.properties"/>

	<!-- Configure the data source bean -->
	<!-- Get environment variable -->
	<bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>

	<!-- Split string from environment variable -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="driverClass" value="org.h2.Driver"/>
    </bean>

	<!-- Create default configuration for Hibernate -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

	<!-- Configure the entity manager factory bean -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
   		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
    	<!-- Set the base package of your model classes -->
    	<property name="packagesToScan" value="foo.bar.model"/>
    	<property name="jpaProperties">
    		<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        		<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
        		<prop key="hibernate.format_sql">true</prop>
        		<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
        		<prop key="hibernate.show_sql">true</prop>
      		</props>
    	</property>
	</bean>

	<!-- Configure the transaction manager bean -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory"/>
  	</bean>

	<!-- Enable @Transactional annotations -->
	<tx:annotation-driven/>

	<!-- 
    Configure Spring Data JPA and set the base package of the 
    repository interfaces 
	-->
	<jpa:repositories base-package="org.cookbookgeeks.webkochbuch.domain"/>
</beans>